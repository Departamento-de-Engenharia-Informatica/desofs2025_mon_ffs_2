@model AMAPP.Web.Models.CreateProductOffer

<!-- Link para o CSS com a versão para cache -->
<link rel="stylesheet" href="~/css/products.css" asp-append-version="true" />

<div class="container">
    <h2 class="title">Criar Oferta de Produto</h2>

    <!-- Mensagens de erro gerais -->
    @if (ViewBag.ErrorMessageProducts != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.ErrorMessageProducts
        </div>
    }

    @if (ViewBag.ErrorMessagePeriods != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.ErrorMessagePeriods
        </div>
    }

    <form asp-action="Create" method="post" class="needs-validation" novalidate>
        <!-- Produto -->
        <div class="mb-3">
            <label for="ProductId" class="form-label">Produto</label>
            <select id="ProductId" class="form-select" asp-for="ProductId" asp-items="@(ViewBag.Products != null ? new SelectList(ViewBag.Products, "Id", "Name") : null)">
                <option value="">Selecione um produto</option>
            </select>
            <span asp-validation-for="ProductId" class="text-danger"></span>
        </div>

        <!-- Período de Assinatura -->
        <div class="mb-3">
            <label for="PeriodSubscriptionId" class="form-label">Período de Assinatura</label>
            <select id="PeriodSubscriptionId" class="form-select" asp-for="SubscriptionPeriodId" asp-items="@(ViewBag.SubscriptionPeriods != null ? new SelectList(ViewBag.SubscriptionPeriods, "Id", "Name") : null)">
                <option value="">Selecione um período</option>
            </select>
            <span asp-validation-for="SubscriptionPeriodId" class="text-danger"></span>
        </div>


        <!-- Datas de Entrega -->
@*         <div class="mb-3">
            <label for="DeliveryDates" class="form-label">Datas de Entrega</label>
            <div id="DeliveryDatesContainer">
                <div class="input-group mb-2">
                    <input type="date" class="form-control" name="SelectedDeliveryDates" />
                    <button type="button" class="btn btn-danger remove-date-btn">Remover</button>
                </div>
            </div>
            <button type="button" id="addDateButton" class="btn-create">Adicionar Data</button>
            <span asp-validation-for="SelectedDeliveryDates" class="text-danger"></span>
        </div>   *@      
        <div class="mb-3">
            <label for="DeliveryDates" class="form-label">Datas de Entrega</label>
@*             <select id="SelectedDeliveryDates" class="form-select" multiple="multiple" asp-for="SelectedDeliveryDates">
                <option value="">Selecione as datas</option>
            </select> *@
            @Html.DropDownListFor(
                     model => model.SelectedDeliveryDates,
                     new MultiSelectList(Enumerable.Empty<SelectListItem>()), // Empty list initially
                     "Selecione as datas",
                     new { @id = "SelectedDeliveryDates", @class = "form-control", multiple = "multiple" }
                     )
            <span asp-validation-for="SelectedDeliveryDates" class="text-danger"></span>
        </div>


        <!-- Método de Pagamento -->
@*         <div class="mb-3">
            <label for="PaymentMethod" class="form-label">Método de Pagamento</label>
            <select id="PaymentMethod" class="form-select" asp-for="PaymentMethod">
                @foreach (var method in Enum.GetValues(typeof(PaymentMethod)))
                {
                    <option value="@method">@method</option>
                }
            </select>
            <span asp-validation-for="PaymentMethod" class="text-danger"></span>
        </div> *@


        <div class="mb-3">
            <label for="PaymentMethod" class="form-label">Método de Pagamento</label>
                @foreach (var method in Enum.GetValues(typeof(PaymentMethod)))
                {
                    <div class="form-check">
                        <input 
                            type="checkbox" 
                            class="form-check-input" 
                            id="PaymentMethod_@method" 
                            name="PaymentMethod" 
                            value="@method" />
                        <label class="form-check-label" for="PaymentMethod_@method">@method</label>
                    </div>
                }
            <span asp-validation-for="PaymentMethod" class="text-danger"></span>
        </div>

        <!-- Modo de Pagamento -->
@*         <div class="mb-3">
            <label for="PaymentMode" class="form-label">Modo de Pagamento</label>
            <select id="PaymentMode" class="form-select" asp-for="PaymentMode">
                @foreach (var mode in Enum.GetValues(typeof(PaymentMode)))
                {
                    <option value="@mode">@mode</option>
                }
            </select>
            <span asp-validation-for="PaymentMode" class="text-danger"></span>
        </div> *@

        <div class="mb-3">
            <label for="PaymentMode" class="form-label">Modo de Pagamento</label>
                @foreach (var mode in Enum.GetValues(typeof(PaymentMode)))
                {
                    <div class="form-check">
                        <input 
                            type="checkbox" 
                            class="form-check-input" 
                            id="PaymentMode_@mode" 
                            name="PaymentMode" 
                            value="@mode" />
                        <label class="form-check-label" for="PaymentMode_@mode">@mode</label>
                    </div>
                }
            <span asp-validation-for="PaymentMode" class="text-danger"></span>
        </div>

        <button type="submit" class="btn-create">Salvar</button>
    </form>
</div>

@section Scripts {
    <script>
        // Adiciona uma nova data de entrega ao formulário
        // document.getElementById('addDateButton').addEventListener('click', function () {
        //     const container = document.getElementById('DeliveryDatesContainer');
        //     const newDateGroup = document.createElement('div');
        //     newDateGroup.classList.add('input-group', 'mb-2');
        //     newDateGroup.innerHTML = `
        //         <input type="date" class="form-control" name="SelectedDeliveryDates" />
        //         <button type="button" class="btn btn-danger remove-date-btn">Remover</button>
        //     `;
        //     container.appendChild(newDateGroup);
        // });

        // Remove uma data de entrega do formulário
        // document.getElementById('DeliveryDatesContainer').addEventListener('click', function (event) {
        //     if (event.target.classList.contains('remove-date-btn')) {
        //         event.target.closest('.input-group').remove();
        //     }
        // });

        document.getElementById("PeriodSubscriptionId").addEventListener("change", function () {
            debugger;
            var subscriptionPeriodId = this.value; // Get the selected subscription period ID

            // Check if a valid subscription period is selected
            if (subscriptionPeriodId) {
                // AJAX request to get the available delivery dates
                fetch('@Url.Action("GetDeliveryDates", "SubscriptionPeriod")?subscriptionPeriodId=' + subscriptionPeriodId)
                    .then(response => response.json())
                    .then(data => {
                        var deliveryDateDropdown = document.getElementById("SelectedDeliveryDates");
                        deliveryDateDropdown.innerHTML = '<option value="">Selecione as datas</option>'; // Clear existing options
                        debugger;
                        // Populate new options for multiple selections
                        data.forEach(item => {
                            var option = document.createElement("option");
                            option.value = item.id;
                            option.textContent = item.date;
                            deliveryDateDropdown.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching delivery dates:', error);
                    });
            } else {
                // If no period is selected, clear the delivery date dropdown
                document.getElementById("DeliveryDateId").innerHTML = '<option value="">Selecione uma data</option>';
            }
        });
    </script>
}
