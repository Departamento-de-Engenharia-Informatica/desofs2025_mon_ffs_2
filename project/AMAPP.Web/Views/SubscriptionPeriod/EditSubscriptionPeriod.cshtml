    @model AMAPP.Web.Models.SubscriptionPeriod
    <link rel="stylesheet" href="~/css/subscriptionperiod.css" asp-append-version="true" />

    @{
        ViewData["Title"] = "Editar Período de Subscrição";
    }

    <div class="container mt-5">
        <div class="card shadow border-0">
            <div class="card-header bg-primary text-white text-center">
                <h2 class="mb-0">Editar Período de Subscrição</h2>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    <input type="hidden" asp-for="Id" />

                    <div class="mb-3">
                        <label for="Name" class="form-label">Nome</label>
                        <input type="text" id="Name" asp-for="Name" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="SubDuration" class="form-label">Periodicidade</label>
                        <select id="SubDuration" name="Duration" class="form-control" required>
                            <option value="">Selecione a periodicidade da subscrição</option>
                            @foreach (var duration in Enum.GetValues(typeof(Constants.SubscriptionDuration)))
                            {
                                <option value="@duration" selected="@(Model?.Duration == (Constants.SubscriptionDuration)duration ? "selected" : null)">@duration</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="StartDate" class="form-label">Data de Início</label>
                        <input type="date" id="StartDate" asp-for="StartDate" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="EndDate" class="form-label">Data de Fim</label>
                        <input type="date" id="EndDate" asp-for="EndDate" class="form-control" required />
                    </div>
                    
                <div class="mb-3">
                    <label for="SubPeriodDeliveryDates" class="form-label">Datas de Entrega</label>
                    <div id="SubPeriodDeliveryDatesContainer">
                        @for (int i = 0; i < Model.Dates.Count; i++)
                        {
                            <div class="input-group mb-2">
                                <input type="date" class="form-control" name="Dates[@i].Date" value="@Model.Dates[i].Date.ToString("yyyy-MM-dd")" />
                                <button type="button" class="btn btn-danger remove-date-btn">Remover</button>
                            </div>
                        }
                    </div>
                    <button type="button" id="addDateButton" class="btn-create">Adicionar Data</button>
                    <span asp-validation-for="Dates" class="text-danger"></span>
                </div>
                    <div class="d-flex justify-content-end mt-4">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="bi bi-check-circle-fill"></i> Guardar Alterações
                        </button>
                        <a asp-action="List" class="btn btn-secondary">
                            <i class="bi bi-x-circle-fill"></i> Cancelar
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

@section Scripts {
<script>
    @if (TempData.Peek("ErrorMessage") != null)
    {
        <text>
            alert('@Html.Raw(TempData["ErrorMessage"])');
        </text>
    }
</script>

    <script>
        let dateIndex = @Model.Dates.Count;

        // Adiciona uma nova data de entrega ao formulário
        document.getElementById('addDateButton').addEventListener('click', function () {
            const container = document.getElementById('SubPeriodDeliveryDatesContainer');
            const newDateGroup = document.createElement('div');
            newDateGroup.classList.add('input-group', 'mb-2');
            newDateGroup.innerHTML = `
                <input type="date" class="form-control" name="Dates[${dateIndex}].Date" />
                <button type="button" class="btn btn-danger remove-date-btn">Remover</button>
            `;
            container.appendChild(newDateGroup);
            dateIndex++;
        });

        // Remove uma data de entrega do formulário
        document.getElementById('SubPeriodDeliveryDatesContainer').addEventListener('click', function (event) {
            if (event.target.classList.contains('remove-date-btn')) {
                event.target.closest('.input-group').remove();
            }
        });
    </script>
}
