@model AMAPP.Web.Models.CreateSubscription
<link rel="stylesheet" href="~/css/subscriptionperiod.css" asp-append-version="true" />

@{
    ViewData["Title"] = "Criar Nova Subscrição";
}

<div class="container mt-5">
    <div class="card shadow border-0">
        <div class="card-header bg-primary text-white text-center">
            <h2 class="mb-0">Criar Nova Subscrição</h2>
        </div>
        <div class="card-body">
            <form asp-controller="Subscriptions" asp-action="Create" method="post">
                
                <div class="mb-3">
                    <label for="PeriodSubscriptionId" class="form-label">Período de Subscrição</label>
                    <select id="PeriodSubscriptionId" class="form-select" asp-for="SubscriptionPeriodId" asp-items="@(ViewBag.SubscriptionPeriods != null ? new SelectList(ViewBag.SubscriptionPeriods, "Id", "Name") : null)">
                        <option value="">Selecione um período</option>
                    </select>
                    <span asp-validation-for="SubscriptionPeriodId" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label for="ProducOffer" class="form-label">Ofertas de Produto</label>
                    @Html.DropDownListFor(
                             model => model.ProductOffer,
                             new MultiSelectList(Enumerable.Empty<SelectListItem>()), // Empty list initially
                             "Selecione o Produto",
                             new { @id = "ProductOffer", @class = "form-control", multiple = "multiple" }
                             )
                    <span asp-validation-for="ProductOffer" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label for="DeliveryDates" class="form-label">Datas de Entrega</label>
                    @Html.DropDownListFor(
                             model => model.ProductOffer,
                             new MultiSelectList(Enumerable.Empty<SelectListItem>()), // Empty list initially
                             "Selecione a data",
                             new { @id = "SelectedDeliveryDates", @class = "form-control", multiple = "multiple" }
                             )
                    <span asp-validation-for="ProductOffer" class="text-danger"></span>
                </div>

                <!-- Campo para Quantity -->
                <div class="mb-3">
                    <label for="Quantity" class="form-label">Quantidade</label>
                    <input type="number" asp-for="Quantity" class="form-control" required />
                </div>

                <!-- Campo para SubscriptionId -->
                <div class="mb-3">
                    <label for="SubscriptionId" class="form-label">Id da Subscrição</label>
                    <input type="number" asp-for="SubscriptionId" class="form-control" required />
                </div>

                <!-- Botões de Ação -->
                <div class="d-flex justify-content-end mt-4">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="bi bi-check-circle-fill"></i> Criar Subscrição
                    </button>
                    <a asp-action="List" class="btn btn-secondary">
                        <i class="bi bi-x-circle-fill"></i> Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("PeriodSubscriptionId").addEventListener("change", function () {
            debugger;
            var subscriptionPeriodId = this.value; // Get the selected subscription period ID

            // Check if a valid subscription period is selected
            if (subscriptionPeriodId) {
                // AJAX request to get the available delivery dates
                fetch('@Url.Action("GetProducts", "SubscriptionPeriod")?subscriptionPeriodId=' + subscriptionPeriodId)
                    .then(response => response.json())
                    .then(data => {
                        var productOfferDropdown = document.getElementById("ProductOffer");
                        productOfferDropdown.innerHTML = '<option value="">Selecione o Produto</option>'; // Clear existing options
                        debugger;
                        // Populate new options for multiple selections
                        data.forEach(item => {
                            var option = document.createElement("option");
                            option.value = item.id;
                            option.text = item.productName;
                            productOfferDropdown.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching Products:', error);
                    });
            } else {
                // If no period is selected, clear the delivery date dropdown
                document.getElementById("DeliveryDateId").innerHTML = '<option value="">Selecione uma data</option>';
            }
        });
    </script>

    <script>
        document.getElementById("ProductOffer").addEventListener("change", function () {
            debugger;
            var productOfferId = this.value; // Get the selected subscription period ID

            // Check if a valid subscription period is selected
            if (productOfferId) {
                // AJAX request to get the available delivery dates
                fetch('@Url.Action("GetDeliveryDates", "ProductOffer")?productOfferId=' + productOfferId)
                    .then(response => response.json())
                    .then(data => {
                        var deliveryDateDropdown = document.getElementById("SelectedDeliveryDates");
                        deliveryDateDropdown.innerHTML = '<option value="">Selecione as datas</option>'; // Clear existing options
                        debugger;
                        // Populate new options for multiple selections
                        data.forEach(item => {
                            var option = document.createElement("option");
                            option.value = item.id;
                            option.textContent = item.date;
                            deliveryDateDropdown.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching delivery dates:', error);
                    });
            } else {
                // If no period is selected, clear the delivery date dropdown
                document.getElementById("DeliveryDateId").innerHTML = '<option value="">Selecione uma data</option>';
            }
        });
    </script>
}
