name: Deploy Strip Fix

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build e Publish
      run: |
        cd ./project/AMAPP.API
        dotnet publish -c Release -o ./app
        
        echo "üìÅ Verificando estrutura do build:"
        find ./app -type f | head -10

    - name: Clean and prepare
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        command_timeout: 10s
        script: |
          echo "üßπ Preparing ~/amapp-api..."
          mkdir -p ~/amapp-api
          rm -rf ~/amapp-api/*
          echo "‚úÖ Directory ready"

    - name: Copy files (sem strip_components)
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        source: "./project/AMAPP.API/app/"
        target: "~/amapp-api/"
        # strip_components: 0  # Remove strip_components para ver estrutura

    - name: Check and start API
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        command_timeout: 20s
        script: |
          echo "üîç Verificando estrutura copiada..."
          echo "üìÅ Conte√∫do de ~/amapp-api/:"
          ls -la ~/amapp-api/
          
          echo ""
          echo "üîç Procurando AMAPP.API.dll:"
          find ~/amapp-api -name "*.dll" | head -5
          
          # Encontrar diret√≥rio com AMAPP.API.dll
          API_DIR=$(find ~/amapp-api -name "AMAPP.API.dll" -exec dirname {} \; | head -1)
          
          if [ -z "$API_DIR" ]; then
            echo "‚ùå AMAPP.API.dll n√£o encontrado!"
            exit 1
          fi
          
          echo "‚úÖ API encontrada em: $API_DIR"
          cd "$API_DIR"
          
          echo "üìç Executando de: $(pwd)"
          echo "üìã Arquivos dispon√≠veis:"
          ls -la *.dll *.json | head -5
          
          echo "üõë Parando processos antigos..."
          pkill -f "AMAPP.API.dll" 2>/dev/null || echo "OK"
          
          echo "üöÄ Iniciando API..."
          export ASPNETCORE_URLS="http://localhost:2226"
          nohup dotnet AMAPP.API.dll > ~/amapp-api.log 2>&1 &
          
          echo "‚è≥ Aguardando inicializa√ß√£o..."
          sleep 5
          
          echo "üîç Verificando se est√° rodando..."
          if ps aux | grep -v grep | grep "AMAPP.API.dll"; then
            echo "‚úÖ API rodando!"
          else
            echo "‚ùå API n√£o iniciou. Log dos √∫ltimos comandos:"
            tail -10 ~/amapp-api.log
          fi